[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "hyprsupreme-builder"
dynamic = ["version", "readme"]
description = "The ultimate Hyprland configuration suite with advanced community features"
authors = [
    {name = "HyprSupreme Team", email = "contact@hyprsupreme.dev"}
]
maintainers = [
    {name = "HyprSupreme Team", email = "contact@hyprsupreme.dev"}
]
license = {text = "MIT"}
requires-python = ">=3.8"
keywords = [
    "hyprland", "wayland", "desktop-environment", "configuration",
    "themes", "customization", "linux", "window-manager",
    "community", "builder", "automation"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: X11 Applications",
    "Environment :: Console",
    "Environment :: Web Environment",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Shell",
    "Topic :: Desktop Environment",
    "Topic :: System :: Installation/Setup",
    "Topic :: Utilities",
]
dependencies = [
    "requests>=2.28.0",
    "click>=8.0.0",
    "rich>=12.0.0",
    "pyyaml>=6.0",
    "gitpython>=3.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "flake8>=5.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "mypy>=1.0.0",
    "bandit>=1.7.0",
    "safety>=2.0.0",
    "pre-commit>=3.0.0",
]
web = [
    "flask>=2.0.0",
    "flask-cors>=4.0.0",
    "gunicorn>=20.1.0",
    "redis>=4.0.0",
]
gui = [
    "pillow>=9.0.0",
    "tkinter-modern>=1.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "coverage>=7.0.0",
]
all = [
    "hyprsupreme-builder[dev,web,gui,test]"
]

[project.urls]
Homepage = "https://github.com/GeneticxCln/HyprSupreme-Builder"
Documentation = "https://github.com/GeneticxCln/HyprSupreme-Builder/blob/main/README.md"
Repository = "https://github.com/GeneticxCln/HyprSupreme-Builder.git"
"Bug Tracker" = "https://github.com/GeneticxCln/HyprSupreme-Builder/issues"
Changelog = "https://github.com/GeneticxCln/HyprSupreme-Builder/blob/main/CHANGELOG.md"
Discussions = "https://github.com/GeneticxCln/HyprSupreme-Builder/discussions"

[project.scripts]
hyprsupreme = "hyprsupreme:main"
hyprsupreme-community = "tools.hyprsupreme_community:main"
hyprsupreme-migrate = "tools.hyprsupreme_migrate:main"
hyprsupreme-cloud = "tools.hyprsupreme_cloud:main"
hyprsupreme-gui = "gui.hyprsupreme_gui:main"

[tool.setuptools]
packages = ["tools", "gui", "community", "modules"]
include-package-data = true

[tool.setuptools.package-data]
"*" = ["*.md", "*.txt", "*.json", "*.yml", "*.yaml", "*.sh"]
"community" = ["templates/*.html", "static/*"]
"modules" = ["**/*"]

[tool.setuptools.dynamic]
version = {file = "VERSION"}
readme = {file = "README.md", content-type = "text/markdown"}

# Development tools configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | sources
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["sources/*"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
exclude = [
    "sources/",
    "venv/",
    "build/",
    "dist/",
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--cov=tools",
    "--cov=gui", 
    "--cov=community",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--strict-markers",
    "--disable-warnings",
    "-ra",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "gui: marks tests that require GUI",
    "web: marks tests that require web server",
]

[tool.coverage.run]
source = ["tools", "gui", "community"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/sources/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "sources", "venv"]
skips = ["B101", "B601"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "E501"]
exclude = [
    ".git",
    "__pycache__",
    "sources",
    "venv",
    "build",
    "dist",
    ".eggs",
]
per-file-ignores = [
    "__init__.py:F401",
]

