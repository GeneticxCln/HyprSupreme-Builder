name: CD

on:
  push:
    tags:
      - 'v*'
  release:
    types: [published]

jobs:
  create-release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Extract version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Create Release Archive
      run: |
        # Create a clean distribution without development files
        mkdir -p dist/HyprSupreme-Builder
        
        # Copy essential files
        cp -r configs/ dist/HyprSupreme-Builder/
        cp -r modules/ dist/HyprSupreme-Builder/
        cp -r scripts/ dist/HyprSupreme-Builder/
        cp -r tools/ dist/HyprSupreme-Builder/
        cp install.sh dist/HyprSupreme-Builder/
        cp uninstall.sh dist/HyprSupreme-Builder/
        cp README.md dist/HyprSupreme-Builder/
        cp LICENSE dist/HyprSupreme-Builder/
        
        # Create tarball
        cd dist/
        tar -czf HyprSupreme-Builder-${{ steps.get_version.outputs.VERSION }}.tar.gz HyprSupreme-Builder/
        
        # Create checksum
        sha256sum HyprSupreme-Builder-${{ steps.get_version.outputs.VERSION }}.tar.gz > HyprSupreme-Builder-${{ steps.get_version.outputs.VERSION }}.tar.gz.sha256

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/HyprSupreme-Builder-${{ steps.get_version.outputs.VERSION }}.tar.gz
          dist/HyprSupreme-Builder-${{ steps.get_version.outputs.VERSION }}.tar.gz.sha256
        body: |
          ## HyprSupreme-Builder ${{ steps.get_version.outputs.VERSION }}
          
          ### Installation
          ```bash
          curl -L https://github.com/${{ github.repository }}/releases/download/${{ steps.get_version.outputs.VERSION }}/HyprSupreme-Builder-${{ steps.get_version.outputs.VERSION }}.tar.gz | tar -xz
          cd HyprSupreme-Builder
          chmod +x install.sh
          ./install.sh
          ```
          
          ### Verification
          ```bash
          # Verify checksum
          sha256sum -c HyprSupreme-Builder-${{ steps.get_version.outputs.VERSION }}.tar.gz.sha256
          ```
          
          For full documentation and usage instructions, see the [README](https://github.com/${{ github.repository }}/blob/main/README.md).
        draft: false
        prerelease: ${{ contains(steps.get_version.outputs.VERSION, 'alpha') || contains(steps.get_version.outputs.VERSION, 'beta') || contains(steps.get_version.outputs.VERSION, 'rc') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-aur:
    runs-on: ubuntu-latest
    needs: create-release
    if: startsWith(github.ref, 'refs/tags/') && !contains(github.ref, 'alpha') && !contains(github.ref, 'beta') && !contains(github.ref, 'rc')
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Extract version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Prepare AUR Package
      run: |
        # This would be expanded if/when you create an AUR package
        echo "Version: ${{ steps.get_version.outputs.VERSION }}"
        echo "Future: Update AUR PKGBUILD with new version and checksums"
        
        # Calculate new checksums for AUR
        curl -sL https://github.com/${{ github.repository }}/releases/download/v${{ steps.get_version.outputs.VERSION }}/HyprSupreme-Builder-v${{ steps.get_version.outputs.VERSION }}.tar.gz | sha256sum

  notify-discord:
    runs-on: ubuntu-latest
    needs: create-release
    if: always() && startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Extract version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Discord Notification
      if: success()
      run: |
        # Placeholder for Discord webhook notification
        echo "ðŸŽ‰ HyprSupreme-Builder ${{ steps.get_version.outputs.VERSION }} has been released!"
        echo "Download: https://github.com/${{ github.repository }}/releases/tag/${{ steps.get_version.outputs.VERSION }}"
        
        # If you have a Discord webhook, uncomment and configure:
        # curl -H "Content-Type: application/json" \
        #      -X POST \
        #      -d '{"content":"ðŸŽ‰ **HyprSupreme-Builder ${{ steps.get_version.outputs.VERSION }}** has been released!\n\nðŸ“¥ **Download:** https://github.com/${{ github.repository }}/releases/tag/${{ steps.get_version.outputs.VERSION }}\nðŸ“– **Changelog:** https://github.com/${{ github.repository }}/releases/tag/${{ steps.get_version.outputs.VERSION }}"}' \
        #      ${{ secrets.DISCORD_WEBHOOK_URL }}

